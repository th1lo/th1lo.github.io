name: Update Design System

on:
  repository_dispatch:
    types: [design-system-update]

jobs:
  update-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install axios

      - name: Update data.json with image
        env:
          FIGMA_TOKEN: ${{ secrets.FIGMA_TOKEN }}
          UPDATE_DATA: ${{ toJson(github.event.client_payload) }}
        run: |
          node << EOF
          const axios = require('axios');
          const fs = require('fs').promises;

          async function processUpdate() {
            const updateData = JSON.parse(process.env.UPDATE_DATA);
            const { file_key, timestamp, triggered_by, description, file_name, created_components, modified_components, created_styles, modified_styles } = updateData;

            try {
              // Get image preview
              const imageResponse = await axios.get(`https://api.figma.com/v1/images/${file_key}?ids=0&format=png`, {
                headers: { 'X-Figma-Token': process.env.FIGMA_TOKEN }
              });
              const preview_image = imageResponse.data.images['0'];

              // Prepare update data
              const newUpdate = {
                file_name,
                description,
                triggered_by,
                timestamp,
                preview_image,
                created_components,
                modified_components,
                created_styles,
                modified_styles
              };

              // Read existing data.json
              let currentData = [];
              try {
                const fileContent = await fs.readFile('data.json', 'utf8');
                currentData = JSON.parse(fileContent);
              } catch (error) {
                console.log('data.json not found or empty, creating new array');
              }

              // Add new update and limit to 50 entries
              currentData.unshift(newUpdate);
              currentData = currentData.slice(0, 50);

              // Write updated data back to data.json
              await fs.writeFile('data.json', JSON.stringify(currentData, null, 2));

              console.log('data.json updated successfully');
            } catch (error) {
              console.error('Error processing update:', error.message);
              process.exit(1);
            }
          }

          processUpdate();
          EOF

      - name: Commit and push if changed
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add data.json
          git diff --quiet && git diff --staged --quiet || (git commit -m "Update design system data" && git push)

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .